<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="HermesPlanning2" constructor="HermesPlanning2" version="2.6.3" display-name-key="HermesPlanning2" description-key="HermesPlanning2 description" control-type="virtual" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
      <type-group name="ResponseSchema">
      <type>SingleLine.Text</type>
    </type-group>

    <!-- Define the property using the type-group -->
    <property name="Payload" display-name-key="Payload" description-key="Payload" of-type="SingleLine.Text" usage="bound" required="false" />
    <property name="selectedWorkerId" display-name-key="Selected Worker ID" description-key="ID of the selected worker" of-type="SingleLine.Text" usage="bound" required="false" />
    <property name="selectedShiftDetails" display-name-key="Selected Shift Details" description-key="Details of the selected shift" of-type="SingleLine.Text" usage="bound" required="false" />
    <property name="response" display-name-key="Response" description-key="Response including validation status" of-type-group="ResponseSchema" usage="bound" required="false">
      <value name="data" display-name-key="Data" description-key="The shift data">_</value>
      <value name="isFromValidation" display-name-key="Is From Validation" description-key="Flag indicating if the update is from validation">__</value>
    </property>
    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <platform-library name="React" version="16.8.6" />
      <platform-library name="Fluent" version="8.29.0" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/HermesGallery.css" order="1" />
      <resx path="strings/HermesGallery.1033.resx" version="1.0.0" />
      -->
    </resources>
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.getSurface" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
  </control>
</manifest>
